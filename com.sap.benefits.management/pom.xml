<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sap.benefits.management</groupId>
	<artifactId>com.sap.benefits.management</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<sap.cloud.jdk.version>1.7</sap.cloud.jdk.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<sap.cloud.sdk.path>${project.basedir}/../..</sap.cloud.sdk.path>
		<sap.cloud.sdk.version>2.16.10.2</sap.cloud.sdk.version>

		<apache.cxf.version>2.7.3</apache.cxf.version>
		<ui5.version>1.12.7</ui5.version>
		<ui5.bluecrystal.version>1.13.0</ui5.bluecrystal.version>
		<ui5.classifier>opt</ui5.classifier>
	</properties>

	<repositories>
		<repository>
			<id>java.net2</id>
			<name>Repository hosting the jee6 artifacts</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>maven.repo</id>
			<name>Maven central Repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sap.security.core.server</groupId>
			<artifactId>csi</artifactId>
			<version>1.0.1</version>
			<scope>system</scope>
			<systemPath>${basedir}/WebContent/WEB-INF/lib/com.sap.security.core.server.csi_1.0.1.jar</systemPath>
		</dependency>

		<!-- CXF Resful services -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${apache.cxf.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-extension-providers</artifactId>
			<version>${apache.cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-security-cors</artifactId>
			<version>${apache.cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.sap.ui5</groupId>
			<artifactId>resource</artifactId>
			<version>1.12.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/WebContent/WEB-INF/lib/resource-1.12.7.jar</systemPath>
		</dependency>

	</dependencies>

	<build>
		<!-- Map the Eclipse file system layout to the Maven plug-ins -->
		<sourceDirectory>${project.basedir}/src</sourceDirectory>
		<testSourceDirectory>${project.basedir}/test</testSourceDirectory>
		<outputDirectory>${project.basedir}/war/WEB-INF/classes</outputDirectory>
		<testOutputDirectory>${project.basedir}/bin/classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>${project.basedir}/src</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/test</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>

		<plugins>
			<!-- Map the Eclipse file system layout to the Maven plug-ins -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<warSourceDirectory>WebContent</warSourceDirectory>
					<archive>
						<manifestFile>WebContent/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>

			<!-- Set compiler to officially supported JDK version for the given SAP 
				HANA Cloud SDK -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${sap.cloud.jdk.version}</source>
					<target>${sap.cloud.jdk.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- Include only unit tests for maven-surefire-plugin that is run in 
				test phase -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<configuration>
					<includes>
						<include>**/test/**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>

			<!-- Enforce officially supported JDK and validated Maven version for 
				the given SAP HANA Cloud SDK or higher -->
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[${sap.cloud.jdk.version},2.0)</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>[3.0.3, 4.0.0)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Force m2e to ignore plugin goal that it doesn't support naturally -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-enforcer-plugin
										</artifactId>
										<versionRange>
											[0.0.1,)
										</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- Activate compiler warnings when matching JDK is present (compiler 
			then doesn't generate bootstrap warnings) -->
		<profile>
			<id>compiler-warnings</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>1.6</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.5.1</version>
						<configuration>
							<compilerArguments>
								<Werror />
							</compilerArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>
